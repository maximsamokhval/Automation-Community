{1,
{21,
{"GROOVY (v8.3.21.12 от 15.03.21) ",1,0,"",""},
{0,
{"Есть мысли по развитию шаблонов? Телеграмм: https://t.me/st1c8",0,0,"","//Есть мысли по развитию шаблонов? https://t.me/st1c8"}
},
{0,
{"Описание",0,0,"","//	Шаблоны для работы в конфигураторе с системами 1С:Предприятие версии 8.3

//	Последнюю версию шаблонов всегда можно найти тут: 1c.chistov.pro

//	С уважением, Павел Чистов"}
},
{0,
{"История изменений",0,0,"","#Область 2021_03_15
    //Добавлен шаблон модуля менеджера
#КонецОбласти 

#Область 2021_02_25
    //Добавлен раздел ""Полезняшки"". В разделе нет автозамены.
	//Будет добавляться полезным кодом
#КонецОбласти 

#Область 2020_06_23
	//Добавлен раздел Расширения
	//В раздел добавлены аннотации: Перед После, Вместо, ИзменениеИКонтроль
#КонецОбласти 

#Область 2020_06_12
	//Добавлено сокращение ЗЗ (ЗаполнитьЗначенияСвойств)
	//Добавлен раздел Асинхронные вызовы, в раздео добавлены шаблоны описания оповещения
	//Добавлен шаблон помещения файла во временное хранилище (надоело набивать руками 4 процедуры)
#КонецОбласти 

#Область 2018_08_06
	//ИсточникДанных заменен на ИсточникДанныхСКД, из-за конкуренции с объектом БлокировкаДанных
#КонецОбласти 

#Область 2014_10_09
	//Добавлены шаблоны описывающие структуру модулей, Комментарии-Структура модулей, в автозамену не подключены
	//Изменен шаблон отчерка, вместо символов ""_"" используется ""="" и курсор помещается в начало отчерка, на основе рекомендации 1С
	//В шаблоне ""ТекущаяДата"" курсор устанавливается в конце метода, ранее устанавливался после пробела
	//Группы ""Комментарии"" и ""Области"" объединены
	//Начат раздел по СКД
#КонецОбласти 

#Область 2014_02_13
	//Текст запроса в соответствующих шаблонах теперь начинается с новой строки
#КонецОбласти 

#Область 2014_01_26
	//Изменен ""Отчерк"", теперь длина комментария 120 символов, по стандарту оформления 1С
	
	//Добавлен шаблон ""нСтр""
	//Добавлен шаблон ""Фрагмент добавлен""
	//Добавлен шаблон ""Фрагмент удален""
	//Добавлен шаблон ""Комментарий модуля""
#КонецОбласти 

#Область 2013_11_19
	//Исправлена ошибка в шаблоне ""Обл=""
#КонецОбласти 

#Область 2013_10_02
	//Убран отчерк перед областью
	
	//Добавлен прикладной шаблон ""ВидДвижения""
	//	При наборе ВидДвижения= срабатывает шаблон на выбор видов движения регистров накопления и регистров бухгалтерии
#КонецОбласти 

#Область 2013_09_15
	//Первая версия
#КонецОбласти 
"}
},
{8,
{"Управляющие",1,0,"",""},
{0,
{"Если",0,0,"Если","Если <?> Тогда
	
КонецЕсли;"}
},
{0,
{"ИначеЕсли",0,0,"ИначеЕсли","ИначеЕсли <?> Тогда"}
},
{0,
{"Пока",0,0,"Пока","Пока <?> Цикл
		
КонецЦикла;"}
},
{0,
{"Для",0,0,"Для","Для <?> По  Цикл
	
КонецЦикла;"}
},
{0,
{"Для каждого",0,0,"Для[ Каждого]","Для каждого <?> Из  Цикл
	
КонецЦикла;"}
},
{0,
{"Попытка",0,0,"Попы[тка]","Попытка
	<?>
Исключение
    //ОписаниеОшибки()
КонецПопытки;"}
},
{7,
{"Процедура",1,0,"",""},
{0,
{"Процедура",0,0,"Проц[едура]","Процедура <?>()
		
КонецПроцедуры
"}
},
{0,
{"Процедура с заголовком",0,0,"Процедура","////////////////////////////////////////////////////////////////////////////////
//
// Процедура <?""Введите имя процедуры"">
//
// Описание:
//
//
// Параметры (название, тип, дифференцированное значение)
//
Процедура <?""Введите имя процедуры"">()
    <?>
КонецПроцедуры //<?""Введите имя процедуры"">

"}
},
{0,
{"Процедура НаКлиенте",0,0,"Проц[едура]","&НаКлиенте
Процедура <?>()
	
КонецПроцедуры
"}
},
{0,
{"Процедура НаСервереБезКонтекста",0,0,"Проц[едура]","&НаСервереБезКонтекста
Процедура <?>()

КонецПроцедуры"}
},
{0,
{"Процедура НаСервере",0,0,"Проц[едура]","&НаСервере
Процедура <?>()
	
КонецПроцедуры
"}
},
{0,
{"Процедура НаКлиентеНаСервереБезКонтекста (только модули упр.форм)",0,0,"Проц[едура]","&НаКлиентеНаСервереБезКонтекста
Процедура <?>()
	
КонецПроцедуры
"}
},
{0,
{"Процедура НаКлиентеНаСервере (только модули команд)",0,0,"Проц[едура]","&НаКлиентеНаСервере
Процедура <?>()
	
КонецПроцедуры
"}
}
},
{7,
{"Функция",1,0,"",""},
{0,
{"Функция",0,0,"Функ[ция]","Функция <?>()
		
КонецФункции
"}
},
{0,
{"Функция с заголовком",0,0,"Функция","////////////////////////////////////////////////////////////////////////////////
//
// Функция <?""Введите имя функции"">
//
// Описание:
//
//
// Параметры (название, тип, дифференцированное значение)
//
// Возвращаемое значение: 
//
Функция <?""Введите имя функции"">()
    <?>
КонецФункции //<?""Введите имя функции"">
"}
},
{0,
{"Функция НаКлиенте",0,0,"Функ[ция]","&НаКлиенте
Функция <?>()
	
КонецФункции
"}
},
{0,
{"Функция НаСервереБезКонтекста",0,0,"Функ[ция]","&НаСервереБезКонтекста
Функция <?>()
	
КонецФункции
"}
},
{0,
{"Функция НаСервере",0,0,"Функ[ция]","&НаСервере
Функция <?>()
	
КонецФункции
"}
},
{0,
{"Функция НаКлиентеНаСервереБезКонтекста (только модули упр.форм)",0,0,"Функ[ция]","&НаКлиентеНаСервереБезКонтекста
Функция <?>()
	
КонецФункции"}
},
{0,
{"Функция НаКлиентеНаСервере (только модули команд)",0,0,"Функ[ция]","&НаКлиентеНаСервере
Функция <?>()
	
КонецФункции"}
}
}
},
{8,
{"Прикладные",1,0,"",""},
{0,
{"Значение перечисления",0,0,"Переч[исления.]","Перечисления.<?"""", ЗначениеПеречисления>"}
},
{0,
{"ВыборСчетаДт",0,0,"СчетДт=","СчетДт = <?"""", ПланСчетовПредопределенныеДанные>;"}
},
{0,
{"ВыборСчетаКт",0,0,"СчетКт=","СчетКт = <?"""", ПланСчетовПредопределенныеДанные>;"}
},
{0,
{"Движение",0,0,"Движение=","Движение = Движения<?>
Движение.Период = Дата;"}
},
{0,
{"СубконтоДт",0,0,"СубконтоДт","СубконтоДт[<?"""", ПланВидовХарактеристикПредопределенныеДанные>] = <?>;"}
},
{0,
{"СубконтоКт",0,0,"СубконтоКт","СубконтоКт[<?"""", ПланВидовХарактеристикПредопределенныеДанные>] = <?>;"}
},
{0,
{"Граница",0,0,"Граница=","Граница = Новый Граница(<?>, <?"""", ВыборВарианта, ""ВидГраницы.Включая"", ""ВидГраницы.Включая"", ""ВидГраницы.Исключая"", ""ВидГраницы.Исключая"">);"}
},
{2,
{"ВидДвижения",1,0,"",""},
{0,
{"РегистрыНакопления",0,0,"ВидД[вижения=]","ВидДвижения = <?"""", ВыборВарианта, ""Приход"", ""ВидДвиженияНакопления.Приход"", ""Расход"", ""ВидДвиженияНакопления.Расход"">;"}
},
{0,
{"РегистрыБухгалтерии",0,0,"ВидД[вижения=]","ВидДвижения = <?"""", ВыборВарианта, ""Дебет"", ""ВидДвиженияБухгалтерии.Дебет"", ""Кредит"", ""ВидДвиженияБухгалтерии.Кредит"">;
"}
}
}
},
{16,
{"Раскладка клавиатуры",1,0,"",""},
{0,
{">",0,0,"Ю",">"}
},
{0,
{"<",0,0,"Б","<"}
},
{0,
{"<>",0,0,"БЮ","<>"}
},
{0,
{"<=",0,0,"Б=","<="}
},
{0,
{">=",0,0,"Ю=",">="}
},
{0,
{"ЕстьТгдд",0,0,"ЕстьТгдд","ЕСТЬNULL(<?>"}
},
{0,
{"NULL",0,0,"тгдд","NULL"}
},
{0,
{"[]",0,0,"хъ","[<?>]"}
},
{0,
{"|",0,0,"\ ","|  <?>"}
},
{0,
{"'",0,0,"ээ","'<?>'"}
},
{0,
{"&",0,0,"? ","&<?>"}
},
{0,
{"WebЦвета",0,0,"цуицвета","WebЦвета<?>"}
},
{0,
{"?НаКлиенте",0,0,"?наКлиенте","&НаКлиенте"}
},
{0,
{"?НаСервере",0,0,"?НаСер[вере]","&НаСервере"}
},
{0,
{"?НаСервереБезКонтекста",0,0,"?НаСер[вереБезКонтекста]","&НаСервереБезКонтекста"}
},
{0,
{"?НаКлиентеНаСервереБезКонтекста",0,0,"?НаКлиенте[НаСервереБезКонтекста]","&НаКлиентеНаСервереБезКонтекста"}
}
},
{6,
{"Коллекции значений",1,0,"",""},
{0,
{"ТЗ",0,0,"ТЗ=","ТЗ = Новый ТаблицаЗначений;
<?>"}
},
{0,
{"СЗ",0,0,"СЗ=","СЗ = Новый СписокЗначений;
<?>"}
},
{0,
{"Структура",0,0,"Структура=","Структура = Новый Структура;
<?>"}
},
{0,
{"Соответствие",0,0,"Соответствие=","Соответствие = Новый Соответствие;
<?>"}
},
{0,
{"ДеревоЗначений",0,0,"ДеревоЗначений=","ДеревоЗначений = Новый ДеревоЗначений;
<?>"}
},
{0,
{"Массив",0,0,"Массив=","Массив = Новый Массив(<?>);"}
}
},
{10,
{"Запросы",1,0,"",""},
{0,
{"Запрос с конструктором",0,0,"Запрос=","Запрос = Новый Запрос;
Запрос.Текст = 
""<?"""", ТекстЗапроса>"";
<?>Запрос.УстановитьПараметр("""", );
РезультатЗапроса = Запрос.Выполнить();

"}
},
{0,
{"Запрос вручную",0,0,"Запрос=","Запрос = Новый Запрос;
Запрос.Текст = 
""ВЫБРАТЬ
|   <?>
|
|
|
|
|
|
|
|"";

Запрос.УстановитьПараметр("""", );
РезультатЗапроса = Запрос.Выполнить();
"}
},
{0,
{"Документ",0,0,"Документ.","Документ.<?"""", ОбъектМетаданных, ""Документ"", ""Документ.ТабличнаяЧасть"">"}
},
{0,
{"Справочник",0,0,"Справочник.","Справочник.<?"""", ОбъектМетаданных, ""Справочник"", ""Справочник.ТабличнаяЧасть"">"}
},
{0,
{"РегистрСведений",0,0,"Рег[истрСведений.]","РегистрСведений.<?"""", ОбъектМетаданных, ""РегистрСведений""><?"""", ВыборВарианта, ""Основная таблица"", ""<?>"", ""СрезПервых"", "".СрезПервых(<?>)"", ""СрезПоследних"", "".СрезПоследних(<?>)"">"}
},
{0,
{"РегистрНакопления",0,0,"Рег[истрНакопления.]","РегистрНакопления.<?"""", ОбъектМетаданных, ""РегистрНакопления""><?"""", ВыборВарианта, ""Основная таблица"", ""<?>"", ""Остатки"", "".Остатки(<?>)"", ""Обороты"", "".Обороты(<?>)"", ""ОстаткиИОбороты"", "".ОстаткиИОбороты(<?>)"">"}
},
{0,
{"РегистрБухгалтерии",0,0,"Рег[истрБухгалтерии.]","РегистрБухгалтерии.<?"""", ОбъектМетаданных, ""РегистрБухгалтерии""><?"""", ВыборВарианта, ""Основная таблица"", ""<?>"", ""Субконто"", "".Субконто"", ""ДвиженияССубконто"", "".ДвиженияССубконто(<?>)"", ""Остатки"", "".Остатки(<?>)"", ""Обороты"", "".Обороты(<?>)"", ""ОстаткиИОбороты"", "".ОстаткиИОбороты(<?>)"", ""ОборотыДтКт"", "".ОборотыДтКт(<?>)"">"}
},
{0,
{"РегистрРасчета",0,0,"Рег[истрРасчета.]","РегистрРасчета.<?"""", ОбъектМетаданных, ""РегистрРасчета"", ""РегистрРасчета.Перерасчет"">"}
},
{0,
{"ЛЕВОЕ СОЕДИНЕНИЕ",0,0,"ЛЕВОЕ","ЛЕВОЕ СОЕДИНЕНИЕ"}
},
{0,
{"ПРАВОЕ СОЕДИНЕНИЕ",0,0,"ПРАВОЕ","ПРАВОЕ СОЕДИНЕНИЕ"}
}
},
{5,
{"Диалоговые",1,0,"",""},
{0,
{"НастройкаПериода",0,0,"НастройкаПериода=","НастройкаПериода = Новый НастройкаПериода;
НастройкаПериода.УстановитьПериод(НачПериода, ?(КонПериода='0001-01-01', КонПериода, КонецДня(КонПериода)));
НастройкаПериода.РедактироватьКакИнтервал = Истина;
НастройкаПериода.РедактироватьКакПериод = Истина;
НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
Если НастройкаПериода.Редактировать() Тогда
	НачПериода = НастройкаПериода.ПолучитьДатуНачала();
	КонПериода = НастройкаПериода.ПолучитьДатуОкончания();
КонецЕсли;
"}
},
{3,
{"Предупреждение",1,0,"",""},
{0,
{"Предупреждение",0,0,"Пр[едупреждение]","ПоказатьПредупреждение(,<?>, 60);"}
},
{0,
{"Предупреждение",0,0,"ПоказатьПр[едупреждение]","ПоказатьПредупреждение(,<?>, 60);"}
},
{0,
{"Предупреждение c обработкой оповещения",0,0,"ПоказатьПр[едупреждение]","ОписаниеОповещения = Новый ОписаниеОповещения(""<?""Имя процедуры обработчика"">"", ЭтотОбъект);
ПоказатьПредупреждение(ОписаниеОповещения, <?>, 60);

//Вынести в отдельную процедуру
&НаКлиенте
Процедура <?""Имя процедуры обработчика"">(ДополнительныеПараметры) Экспорт
	
КонецПроцедуры
"}
}
},
{6,
{"Вопрос",1,0,"",""},
{0,
{"Вопрос",0,0,"Ответ=","ОписаниеОповещения = Новый ОписаниеОповещения(""<?""Имя процедуры обработчика"">"", ЭтотОбъект);
ПоказатьВопрос(ОписаниеОповещения, ""<?""Текст вопроса"">"",<?""Режим диалога вопрос"", ВыборВарианта, ""ДаНет"", ""РежимДиалогаВопрос.ДаНет"", ""ДаНетОтмена"", ""РежимДиалогаВопрос.ДаНетОтмена"", ""ОК"", ""РежимДиалогаВопрос.ОК"", ""ОКОтмена"", ""РежимДиалогаВопрос.ОКОтмена"", ""ПовторитьОтмена"", ""РежимДиалогаВопрос.ПовторитьОтмена"", ""ПрерватьПовторитьПропустить"", ""РежимДиалогаВопрос.ПрерватьПовторитьПропустить"">, 60);

<?> 
//Вынести в отдельную процедуру
&НаКлиенте
Процедура <?""Имя процедуры обработчика"">(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
КонецПроцедуры
"}
},
{0,
{"Вопрос",0,0,"ПоказатьВо[прос]","ОписаниеОповещения = Новый ОписаниеОповещения(""<?""Имя процедуры обработчика"">"", ЭтотОбъект);
ПоказатьВопрос(ОписаниеОповещения, ""<?""Текст вопроса"">"",<?""Режим диалога вопрос"", ВыборВарианта, ""ДаНет"", ""РежимДиалогаВопрос.ДаНет"", ""ДаНетОтмена"", ""РежимДиалогаВопрос.ДаНетОтмена"", ""ОК"", ""РежимДиалогаВопрос.ОК"", ""ОКОтмена"", ""РежимДиалогаВопрос.ОКОтмена"", ""ПовторитьОтмена"", ""РежимДиалогаВопрос.ПовторитьОтмена"", ""ПрерватьПовторитьПропустить"", ""РежимДиалогаВопрос.ПрерватьПовторитьПропустить"">, 60);

<?> 
//Вынести в отдельную процедуру
&НаКлиенте
Процедура <?""Имя процедуры обработчика"">(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
КонецПроцедуры
"}
},
{0,
{"Вопрос",0,0,"Воп[рос]","ОписаниеОповещения = Новый ОписаниеОповещения(""<?""Имя процедуры обработчика"">"", ЭтотОбъект);
ПоказатьВопрос(ОписаниеОповещения, ""<?""Текст вопроса"">"",<?""Режим диалога вопрос"", ВыборВарианта, ""ДаНет"", ""РежимДиалогаВопрос.ДаНет"", ""ДаНетОтмена"", ""РежимДиалогаВопрос.ДаНетОтмена"", ""ОК"", ""РежимДиалогаВопрос.ОК"", ""ОКОтмена"", ""РежимДиалогаВопрос.ОКОтмена"", ""ПовторитьОтмена"", ""РежимДиалогаВопрос.ПовторитьОтмена"", ""ПрерватьПовторитьПропустить"", ""РежимДиалогаВопрос.ПрерватьПовторитьПропустить"">, 60);

<?> 
//Вынести в отдельную процедуру
&НаКлиенте
Процедура <?""Имя процедуры обработчика"">(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
КонецПроцедуры
"}
},
{0,
{"Вопрос с анализом результата",0,0,"Ответ=","ОписаниеОповещения = Новый ОписаниеОповещения(""<?""Имя процедуры обработчика"">"", ЭтотОбъект);
ПоказатьВопрос(ОписаниеОповещения, ""<?""Текст вопроса"">"",<?""Режим диалога вопрос"", ВыборВарианта, ""ДаНет"", ""РежимДиалогаВопрос.ДаНет"", ""ДаНетОтмена"", ""РежимДиалогаВопрос.ДаНетОтмена"", ""ОК"", ""РежимДиалогаВопрос.ОК"", ""ОКОтмена"", ""РежимДиалогаВопрос.ОКОтмена"", ""ПовторитьОтмена"", ""РежимДиалогаВопрос.ПовторитьОтмена"", ""ПрерватьПовторитьПропустить"", ""РежимДиалогаВопрос.ПрерватьПовторитьПропустить"">, 60);

<?> 
//Вынести в отдельную процедуру
&НаКлиенте
Процедура <?""Имя процедуры обработчика"">(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса <?"""", ВыборВарианта, ""Равен"", ""="", ""Не равен"", ""<>""> <?""Код возврата диалога"", ВыборВарианта, ""Да"", ""КодВозвратаДиалога.Да"", ""Нет"", ""КодВозвратаДиалога.Нет"", ""ОК"", ""КодВозвратаДиалога.ОК"", ""Отмена"", ""КодВозвратаДиалога.Отмена"", ""Повторить"", ""КодВозвратаДиалога.Повторить"", ""Прервать"", ""КодВозвратаДиалога.Прервать"", ""Пропустить"", ""КодВозвратаДиалога.Пропустить"", ""Тайаут"", ""КодВозвратаДиалога.Таймаут""> Тогда
		
	КонецЕсли; 
	
КонецПроцедуры"}
},
{0,
{"Вопрос с анализом результата",0,0,"ПоказатьВо[прос]","ОписаниеОповещения = Новый ОписаниеОповещения(""<?""Имя процедуры обработчика"">"", ЭтотОбъект);
ПоказатьВопрос(ОписаниеОповещения, ""<?""Текст вопроса"">"",<?""Режим диалога вопрос"", ВыборВарианта, ""ДаНет"", ""РежимДиалогаВопрос.ДаНет"", ""ДаНетОтмена"", ""РежимДиалогаВопрос.ДаНетОтмена"", ""ОК"", ""РежимДиалогаВопрос.ОК"", ""ОКОтмена"", ""РежимДиалогаВопрос.ОКОтмена"", ""ПовторитьОтмена"", ""РежимДиалогаВопрос.ПовторитьОтмена"", ""ПрерватьПовторитьПропустить"", ""РежимДиалогаВопрос.ПрерватьПовторитьПропустить"">, 60);

<?> 
//Вынести в отдельную процедуру
&НаКлиенте
Процедура <?""Имя процедуры обработчика"">(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса <?"""", ВыборВарианта, ""Равен"", ""="", ""Не равен"", ""<>""> <?""Код возврата диалога"", ВыборВарианта, ""Да"", ""КодВозвратаДиалога.Да"", ""Нет"", ""КодВозвратаДиалога.Нет"", ""ОК"", ""КодВозвратаДиалога.ОК"", ""Отмена"", ""КодВозвратаДиалога.Отмена"", ""Повторить"", ""КодВозвратаДиалога.Повторить"", ""Прервать"", ""КодВозвратаДиалога.Прервать"", ""Пропустить"", ""КодВозвратаДиалога.Пропустить"", ""Тайаут"", ""КодВозвратаДиалога.Таймаут""> Тогда
		
	КонецЕсли; 
	
КонецПроцедуры"}
},
{0,
{"Вопрос с анализом результата",0,0,"Воп[рос]","ОписаниеОповещения = Новый ОписаниеОповещения(""<?""Имя процедуры обработчика"">"", ЭтотОбъект);
ПоказатьВопрос(ОписаниеОповещения, ""<?""Текст вопроса"">"",<?""Режим диалога вопрос"", ВыборВарианта, ""ДаНет"", ""РежимДиалогаВопрос.ДаНет"", ""ДаНетОтмена"", ""РежимДиалогаВопрос.ДаНетОтмена"", ""ОК"", ""РежимДиалогаВопрос.ОК"", ""ОКОтмена"", ""РежимДиалогаВопрос.ОКОтмена"", ""ПовторитьОтмена"", ""РежимДиалогаВопрос.ПовторитьОтмена"", ""ПрерватьПовторитьПропустить"", ""РежимДиалогаВопрос.ПрерватьПовторитьПропустить"">, 60);

<?> 
//Вынести в отдельную процедуру
&НаКлиенте
Процедура <?""Имя процедуры обработчика"">(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса <?"""", ВыборВарианта, ""Равен"", ""="", ""Не равен"", ""<>""> <?""Код возврата диалога"", ВыборВарианта, ""Да"", ""КодВозвратаДиалога.Да"", ""Нет"", ""КодВозвратаДиалога.Нет"", ""ОК"", ""КодВозвратаДиалога.ОК"", ""Отмена"", ""КодВозвратаДиалога.Отмена"", ""Повторить"", ""КодВозвратаДиалога.Повторить"", ""Прервать"", ""КодВозвратаДиалога.Прервать"", ""Пропустить"", ""КодВозвратаДиалога.Пропустить"", ""Тайаут"", ""КодВозвратаДиалога.Таймаут""> Тогда
		
	КонецЕсли; 
	
КонецПроцедуры"}
}
},
{2,
{"СообщениеПользователю",1,0,"",""},
{0,
{"Сообщение пользователю",0,0,"Сооб[щение]","Сообщение = Новый СообщениеПользователю;
Сообщение.Текст = ""<?>"";
Сообщение.Сообщить();"}
},
{0,
{"Сообщение пользователю с привязкой к реквизитам",0,0,"Сооб[щение]","Сообщение = Новый СообщениеПользователю;
Сообщение.Текст = ""<?>"";
Сообщение.Поле = """"; //имя реквизита 
Сообщение.УстановитьДанные(); //Ссылка на объект ИБ
Сообщение.Сообщить();"}
}
},
{2,
{"НачатьПомещениеФайла",1,0,"",""},
{0,
{"ПоместитьФайл",0,0,"ПоместитьФ[айл]","ОписаниеОповещения = Новый ОписаниеОповещения(""<?""Имя процедуры обработчика"">"", ЭтотОбъект);
НачатьПомещениеФайла(ОписаниеОповещения, , ,Истина, УникальныйИдентификатор);

<?>
//Вынести в отдельную процедуру
&НаКлиенте
Процедура <?""Имя процедуры обработчика"">(Результат, Адрес, ВыбранноеИмяФайла, ДополнительныеПараметры) Экспорт
	
КонецПроцедуры
"}
},
{0,
{"ПоместитьФайл",0,0,"НачатьПо[мещениеФайла]","ОписаниеОповещения = Новый ОписаниеОповещения(""<?""Имя процедуры обработчика"">"", ЭтотОбъект);
НачатьПомещениеФайла(ОписаниеОповещения, , ,Истина, УникальныйИдентификатор);

<?>
//Вынести в отдельную процедуру
&НаКлиенте
Процедура <?""Имя процедуры обработчика"">(Результат, Адрес, ВыбранноеИмяФайла, ДополнительныеПараметры) Экспорт
	
КонецПроцедуры
"}
}
}
},
{3,
{"Табличный документ",1,0,"",""},
{0,
{"ТабДок",0,0,"ТабДок=","ТабДок = <?"""", ВыборВарианта, ""ЭлементыФормы.ТабДок"", ""ЭлементыФормы.ТабДок"", ""Новый ТабличныйДокумент"", ""Новый ТабличныйДокумент"">;
<?>"}
},
{0,
{"ПолучитьОбласть",0,0,"Обл=","Обл<?""Название области""> = <?>.ПолучитьОбласть(""<?""Название области"">"");"}
},
{0,
{"Макет",0,0,"Макет=","Макет = ПолучитьМакет(""Макет"");"}
}
},
{21,
{"Сокращения",1,0,"",""},
{0,
{"НачалоМесяца",0,0,"НМ","НачалоМесяца(<?>)"}
},
{0,
{"КонецМесяца",0,0,"КМ","КонецМесяца(<?>)"}
},
{0,
{"НачалоДня",0,0,"НД","НачалоДня(<?>)"}
},
{0,
{"КонецДня",0,0,"КД","КонецДня(<?>)"}
},
{0,
{"ТекущаяДата",0,0,"ТД","ТекущаяДата()<?>"}
},
{0,
{"ПериодДействияНачало",0,0,"ПДН","ПериодДействияНачало"}
},
{0,
{"ПериодДействияКонец",0,0,"ПДК","ПериодДействияКонец"}
},
{0,
{"БазовыйПериодНачало",0,0,"БПН","БазовыйПериодНачало"}
},
{0,
{"БазовыйПериодКонец",0,0,"БПК","БазовыйПериодКонец"}
},
{0,
{"ПланыВидовХарактеристик",0,0,"ПВХ","<?"""", ПланВидовХарактеристикПредопределенныеДанные>"}
},
{0,
{"ПланыВидовРасчета",0,0,"ПВР","<?"""", ПланВидовРасчетаПредопределенныеДанные>"}
},
{0,
{"ДобавитьМесяц",0,0,"ДМ","ДобавитьМесяц(<?>,)"}
},
{0,
{"Неопределено",0,0,"Неоп[ределено]","Неопределено"}
},
{0,
{"УстановитьПараметр",0,0,"УП","УстановитьПараметр(""<?>"",);"}
},
{0,
{"Контрагент",0,0,"Конт[рагент]","Контрагент"}
},
{0,
{"Номенклатура",0,0,"Номе[нклатура]","Номенклатура"}
},
{0,
{"Количество",0,0,"Коли[чество]","Количество"}
},
{0,
{"Стоимость",0,0,"Стои[мость]","Стоимость"}
},
{0,
{"УстановитьЗначениеПараметра",0,0,"УЗП","УстановитьЗначениеПараметра(""<?>"",);"}
},
{0,
{"МоментВремени",0,0,"МВ","МоментВремени()"}
},
{0,
{"ЗаполнитьЗначенияСвойств",0,0,"ЗЗ","заполнитьЗначенияСвойств(<?>, );"}
}
},
{4,
{"НаборЗаписей",1,0,"",""},
{0,
{"РегистрСведений",0,0,"НаборЗаписей=","НаборЗаписей = РегистрыСведений.<?"""", РегистрСведений>.СоздатьНаборЗаписей();
"}
},
{0,
{"РегистрНакопления",0,0,"НаборЗаписей=","НаборЗаписей = РегистрыНакопления.<?"""", РегистрНакопления>.СоздатьНаборЗаписей();
НаборЗаписей.Отбор.Регистратор.Установить(<?>);
НаборЗаписей.Прочитать();"}
},
{0,
{"РегистрБухгалтерии",0,0,"НаборЗаписей=","НаборЗаписей = РегистрыБухгалтерии.<?"""", РегистрБухгалтерии>.СоздатьНаборЗаписей();
НаборЗаписей.Отбор.Регистратор.Установить(<?>);
НаборЗаписей.Прочитать();"}
},
{0,
{"РегистрРасчета",0,0,"НаборЗаписей=","НаборЗаписей = РегистрыРасчета.<?"""", РегистрРасчета>.СоздатьНаборЗаписей();
НаборЗаписей.Отбор.Регистратор.Установить(<?>);
НаборЗаписей.Прочитать();"}
}
},
{7,
{"Прочие",1,0,"",""},
{0,
{"Формат",0,0,"Формат","Формат(<?>, ""<?, ФорматнаяСтрока>"")"}
},
{0,
{"Конструктор описания типов",0,1,"","<?""Конструктор описания типов"", КонструкторОписанияТипов>"}
},
{0,
{"Проверка типа",0,1,"","Если ТипЗнч(<?""Выражение для проверки типа"">) = Тип(""<?""Выберите тип"", ВыборТипа>"") Тогда

	<?>

КонецЕсли;"}
},
{0,
{"Шрифт",0,0,"Шрифт=","//	КОНСТРУКТОР     Имя шрифта, Размер, Жирный, Наклонный, Подчеркнутый, Зачеркнутый
Шрифт = Новый Шрифт(   <?>       ,       ,       ,          ,             ,            );"}
},
{0,
{"ЧислоПрописью",0,0,"Число[Прописью]","ЧислоПрописью(<?>,,""рубль, рубля, рублей, м, копейка, копейки, копеек, ж, 2"")"}
},
{0,
{"Выборка",0,0,"Выборка=","Выборка = <?>.Выбрать();
Пока Выборка.Следующий() Цикл

КонецЦикла; "}
},
{0,
{"нСтр",0,0,"нСтр","нСтр(""ru='<?>'"", ""ru"")"}
}
},
{2,
{"Инструкции предпроцессору",1,0,"",""},
{0,
{"#Если",0,0,"№Если","#Если <?"""", ВыборВарианта, ""Клиент"", ""Клиент"", ""Сервер"", ""Сервер"", ""ВнешнееСоединение"", ""ВнешнееСоединение"" ,""ТолстыйКлиентОбычноеПриложение"", ""ТолстыйКлиентОбычноеПриложение"", ""ТолстыйКлиентУправляемоеПриложение"",""ТолстыйКлиентУправляемоеПриложение"", ""ТонкийКлиент"", ""ТонкийКлиент"", ""ВебКлиент"", ""ВебКлиент""> Тогда
    <?> 	
#КонецЕсли"}
},
{0,
{"#Если",0,0,"#Если","#Если <?"""", ВыборВарианта, ""Клиент"", ""Клиент"", ""Сервер"", ""Сервер"", ""ВнешнееСоединение"", ""ВнешнееСоединение"" ,""ТолстыйКлиентОбычноеПриложение"", ""ТолстыйКлиентОбычноеПриложение"", ""ТолстыйКлиентУправляемоеПриложение"",""ТолстыйКлиентУправляемоеПриложение"", ""ТонкийКлиент"", ""ТонкийКлиент"", ""ВебКлиент"", ""ВебКлиент""> Тогда
    <?> 	
#КонецЕсли"}
}
},
{4,
{"Блокировки",1,0,"",""},
{0,
{"Блокировка РегистрНакопления",0,0,"Блокировка=","Блокировка = Новый БлокировкаДанных;
ЭлементБлокировки = Блокировка.Добавить(""РегистрНакопления.<?"""", РегистрНакопления>"");
ЭлементБлокировки.Режим = <?"""", ВыборВарианта, ""РежимБлокировкиДанных.Исключительный"", ""РежимБлокировкиДанных.Исключительный"", ""РежимБлокировкиДанных.Разделяемый"", ""РежимБлокировкиДанных.Разделяемый"">;
//ЭлементБлокировки.ИсточникДанных = <?>;
//ЭлементБлокировки.ИспользоватьИзИсточникаДанных("""", """");
//ЭлементБлокировки.УстановитьЗначение("""", );
Блокировка.Заблокировать(); 
"}
},
{0,
{"Блокировка РегистрБухгалтерии",0,0,"Блокировка=","Блокировка = Новый БлокировкаДанных;
ЭлементБлокировки = Блокировка.Добавить(""РегистрБухгалтерии.<?"""", РегистрБухгалтерии>"");
ЭлементБлокировки.Режим = <?"""", ВыборВарианта, ""РежимБлокировкиДанных.Исключительный"", ""РежимБлокировкиДанных.Исключительный"", ""РежимБлокировкиДанных.Разделяемый"", ""РежимБлокировкиДанных.Разделяемый"">;
//ЭлементБлокировки.УстановитьЗначение(""Период"", Новый Диапазон( , ));
//ЭлементБлокировки.УстановитьЗначение(""Счет"", );
Блокировка.Заблокировать(); 
"}
},
{0,
{"Блокировка РегистрСведений",0,0,"Блокировка=","Блокировка = Новый БлокировкаДанных;
ЭлементБлокировки = Блокировка.Добавить(""РегистрСведений.<?"""", РегистрСведений>"");
ЭлементБлокировки.Режим = <?"""", ВыборВарианта, ""РежимБлокировкиДанных.Исключительный"", ""РежимБлокировкиДанных.Исключительный"", ""РежимБлокировкиДанных.Разделяемый"", ""РежимБлокировкиДанных.Разделяемый"">;
//ЭлементБлокировки.ИсточникДанных = <?>;
//ЭлементБлокировки.ИспользоватьИзИсточникаДанных("""", """");
//ЭлементБлокировки.УстановитьЗначение("""", );
Блокировка.Заблокировать(); 
"}
},
{0,
{"Блокировка РегистрРасчета",0,0,"Блокировка=","Блокировка = Новый БлокировкаДанных;
ЭлементБлокировки = Блокировка.Добавить(""РегистрРасчета.<?"""", РегистрРасчета>"");
ЭлементБлокировки.Режим = <?"""", ВыборВарианта, ""РежимБлокировкиДанных.Исключительный"", ""РежимБлокировкиДанных.Исключительный"", ""РежимБлокировкиДанных.Разделяемый"", ""РежимБлокировкиДанных.Разделяемый"">;
//ЭлементБлокировки.ИсточникДанных = <?>;
//ЭлементБлокировки.ИспользоватьИзИсточникаДанных("""", """");
//ЭлементБлокировки.УстановитьЗначение("""", );
Блокировка.Заблокировать(); 
"}
}
},
{1,
{"Запись",1,0,"",""},
{0,
{"ЗаписьРегистраРасчетов",0,0,"Запись=","Запись = Движения.<?"""", РегистрРасчета>.Добавить();
Запись.ПериодРегистрации = Дата;
Запись.ПериодДействияНачало = ;
Запись.ПериодДействияКонец = ;
Запись.Сторно = Ложь;
Запись.Сотрудник = ;
Запись.Подразделение = ;
Запись.График = ;
Запись.Параметр = ;
Запись.БазовыйПериодНачало = ;
Запись.БазовыйПериодКонец = ;"}
}
},
{10,
{"Комментарии и области",1,0,"",""},
{0,
{"Отчерк",0,0,"/*","<?>//======================================================================================================================"}
},
{0,
{"Группировка с комментарием ",0,0,"\хъ","//{<?>
//}"}
},
{0,
{"Группировка с комментарием Открыть",0,0,"\х","//{<?>"}
},
{0,
{"Группировка с комментарием Закрыть",0,0,"\ъ","//}<?>"}
},
{0,
{"Фрагмент добавлен",0,0,"/+","//{[+](фрагмент ДОБАВЛЕН), <?"""", ПолноеИмяПользователя> <?"""", ДатаВремя, ""ДЛФ=DT"">
<?>
//}<?"""", ПолноеИмяПользователя> <?"""", ДатаВремя, ""ДЛФ=DT"">"}
},
{0,
{"Фрагмент удален",0,0,"/-","//{[-](фрагмент УДАЛЕН)<?"""", ПолноеИмяПользователя> <?"""", ДатаВремя, ""ДЛФ=DT"">
<?>
//}<?"""", ПолноеИмяПользователя> <?"""", ДатаВремя, ""ДЛФ=DT"">
"}
},
{0,
{"Фрагмент ИЗМЕНЕН",0,1,"","//{[*](фрагмент ИЗМЕНЕН), <?"""", ПолноеИмяПользователя> <?"""", ДатаВремя, ""ДЛФ=DT"">
<?>
//}<?"""", ПолноеИмяПользователя> <?"""", ДатаВремя, ""ДЛФ=DT"">"}
},
{0,
{"Заголовок модуля",0,0,"/ЗМ","////////////////////////////////////////////////////////////////////////////////
// МОДУЛЬ <?>:
//
// -
//
//
////////////////////////////////////////////////////////////////////////////////"}
},
{5,
{"Структура модулей",1,0,"",""},
{0,
{"Общий модуль",0,0,"","////////////////////////////////////////////////////////////////////////////////
// <Заголовок модуля: краткое описание и условия применения модуля.>
//  
////////////////////////////////////////////////////////////////////////////////
#Область ПрограммныйИнтерфейс

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти"}
},
{0,
{"Модуль объекта",0,0,"","
////////////////////////////////////////////////////////////////////////////////
// <Заголовок модуля: краткое описание и условия применения модуля.>
//  
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#КонецОбласти

#Область ОбработчикиПроведения

#КонецОбласти

#Область ОбработчикиСобытий

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти


"}
},
{0,
{"Модуль формы",0,0,"","////////////////////////////////////////////////////////////////////////////////
// <Заголовок модуля: краткое описание и условия применения модуля.>
//  
////////////////////////////////////////////////////////////////////////////////


#Область ОбработчикиСобытийФормы

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы<ИмяТаблицыФормы>

#КонецОбласти

#Область ОбработчикиКомандФормы

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти"}
},
{0,
{"Модуль бизнес-процесса",0,0,"","
////////////////////////////////////////////////////////////////////////////////
// <Заголовок модуля: краткое описание и условия применения модуля.>
//  
////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийКартыМаршрута

#КонецОбласти

#Область ОбработчикиСобытийМодуля

#КонецОбласти

#Область ПрограммныйИнтерфейс

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти
"}
},
{0,
{"Модуль менеджера",0,0,"","////////////////////////////////////////////////////////////////////////////////
// <Заголовок модуля: краткое описание и условия применения модуля.>
//  
////////////////////////////////////////////////////////////////////////////////

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти

#КонецЕсли
"}
}
},
{0,
{"Область",0,0,"Обла[сть]","#Область <?""Имя области (без пробелов)"">

#КонецОбласти"}
}
},
{4,
{"СКД - альфа версия",1,0,"",""},
{6,
{"НаборыДанных",1,0,"",""},
{0,
{"СхемаКомпоновки",0,0,"СКД=","СхемаКомпоновки = Новый СхемаКомпоновкиДанных;"}
},
{0,
{"ИсточникДанныхСКД",0,0,"Источник[ДанныхСКД]=","ИсточникДанных = СхемаКомпоновки.ИсточникиДанных.Добавить();
ИсточникДанных.Имя = ""local"";
ИсточникДанных.ТипИсточникаДанных = ""local"";
"}
},
{0,
{"Набор данных Запрос",0,0,"НаборД[анных=]","НаборДанных = СхемаКомпоновки.НаборыДанных.Добавить(Тип(""НаборДанныхЗапросСхемыКомпоновкиДанных""));
НаборДанных.Имя = ""НаборДанных1"";
НаборДанных.ИсточникДанных = ИсточникДанных.Имя;
НаборДанных.Запрос = <?>;
"}
},
{0,
{"Набор данных Объект",0,0,"НаборД[анных=]","НаборДанных = СхемаКомпоновки.НаборыДанных.Добавить(Тип(""НаборДанныхОбъектСхемыКомпоновкиДанных""));
НаборДанных.Имя = ""НаборДанных1"";
НаборДанных.ИсточникДанных = ИсточникДанных.Имя;
НаборДанных.ИмяОбъекта = <?>;
"}
},
{0,
{"Набор данных Объединение",0,0,"НаборД[анных=]","НаборДанных = СхемаКомпоновки.НаборыДанных.Добавить(Тип(""НаборДанныхОбъединениеСхемыКомпоновкиДанных""));
НаборДанных.Имя = ""НаборДанных1"";
НаборДанных.Элементы = <?>;
"}
},
{0,
{"ПолеСКД",0,0,"ПолеСКД=","ПолеСКД = НаборДанных.Поля.Добавить(Тип(""ПолеНабораДанныхСхемыКомпоновкиДанных""));
ПолеСКД.Поле = ""<?>"";
ПолеСКД.ПутьКДанным = ""<?>"";
ПолеСКД.Роль.Измерение = Истина;
"}
}
},
{1,
{"Ресурсы",1,0,"",""},
{0,
{"РесурсСКД",0,0,"РесурсСКД=","РесурсСКД = СхемаКомпоновки.ПоляИтога.Добавить();
РесурсСКД.ПутьКДанным = ""<?>""; 
РесурсСКД.Выражение = ""Сумма(<?>)"";"}
}
},
{1,
{"Параметры",1,0,"",""},
{0,
{"ПараметрСКД",0,0,"ПараметрСКД=","ПараметрСКД = СхемаКомпоновки.Параметры.Добавить(); //Разные параметры надо описывать разными переменными!
ПараметрСКД.Имя = <?""Имя параметра"">;
ПараметрСКД.Заголовок = <?""Имя параметра"">;
ПараметрСКД.ТипЗначения = <?""Конструктор описания типов"", КонструкторОписанияТипов>;
ПараметрСКД.ВключатьВДоступныеПоля = Истина;
ПараметрСКД.Использование = ИспользованиеПараметраКомпоновкиДанных.Авто;
"}
}
},
{10,
{"Настройки",1,0,"",""},
{0,
{"НастройкиСКД Новый вариант",0,0,"НастройкиСКД=","НастройкиСКД = СхемаКомпоновки.ВариантыНастроек.Добавить();"}
},
{0,
{"НастройкиСКД Настройки по умолчанию",0,0,"НастройкиСКД=","НастройкиСКД = СхемаКомпоновки.НастройкиПоУмолчанию;
"}
},
{0,
{"ГруппировкаСКД - новая группировка в корень",0,0,"ГруппировкаСКД=","ГруппировкаСКД = НастройкиСКД.Структура.Добавить(Тип(""<?"""", ВыборВарианта, ""Группировка"", ""ГруппировкаКомпоновкиДанных"", ""Таблица"", ""ТаблицаКомпоновкиДанных"">""));
ГруппировкаСКД.Использование = Истина;
ПолеГруппировки = ГруппировкаСКД.ПоляГруппировки.Элементы.Добавить(Тип(""ПолеГруппировкиКомпоновкиДанных""));
ПолеГруппировки.Использование = Истина;
ПолеГруппировки.Поле = Новый ПолеКомпоновкиДанных(""<?""Введите имя поля"">"");
"}
},
{0,
{"ГруппировкаСКД - вложенная группировка",0,0,"ГруппировкаСКД=","ГруппировкаСКД = ГруппировкаСКД.Структура.Добавить(Тип(""<?"""", ВыборВарианта, ""Группировка"", ""ГруппировкаКомпоновкиДанных"", ""Таблица"", ""ТаблицаКомпоновкиДанных"">""));
ГруппировкаСКД.Использование = Истина;
ПолеГруппировки = ГруппировкаСКД.ПоляГруппировки.Элементы.Добавить(Тип(""ПолеГруппировкиКомпоновкиДанных""));
ПолеГруппировки.Использование = Истина;
ПолеГруппировки.Поле = Новый ПолеКомпоновкиДанных(""<?""Введите имя поля"">"");
"}
},
{0,
{"ВыбранноеПолеСКД - АвтоПоле",0,0,"ВыбранноеПолеСКД=","ВыбранноеПолеСКД = ГруппировкаСКД.Выбор.Элементы.Добавить(Тип(""АвтоВыбранноеПолеКомпоновкиДанных""));
ВыбранноеПолеСКД.Использование = Истина;
"}
},
{0,
{"ВыбранноеПолеСКД - Произольное поле",0,0,"ВыбранноеПолеСКД=","ВыбранноеПолеСКД = ГруппировкаСКД.Выбор.Элементы.Добавить(Новый ПолеКомпоновкиДанных(""<?""Введите имя поля"">""));
ВыбранноеПолеСКД.Использование = Истина;
"}
},
{0,
{"ПолеСортировкиСКД - Авто",0,0,"ПолеСортировкиСКД=","ПолеСортировки = НастройкиСКД.Порядок.Элементы.Добавить(Тип(""АвтоЭлементПорядкаКомпоновкиДанных""));
ПолеСортировки.Использование = Истина;
"}
},
{0,
{"ПолеСортировкиСКД - Произольное поле",0,0,"ПолеСортировкиСКД=","ПолеСортировки = НастройкиСКД.Порядок.Элементы.Добавить(Новый ПолеКомпоновкиДанных(""<?""Введите имя поля"">""));
ПолеСортировки.Использование = Истина;
"}
},
{0,
{"ЗначениеПараметраСКД",0,0,"","ЗначениеПараметраСКД = НастройкиСКД.ПараметрыДанных.Элементы.Добавить();
ЗначениеПараметраСКД.Использование = Истина;
ЗначениеПараметраСКД.Параметр = Новый ПараметрКомпоновкиДанных(""<?""Имя параметра"">"");
ЗначениеПараметраСКД.Значение = <?""Значение параметра"">;"}
},
{0,
{"ОтборСКД",0,0,"","ЭлементОтбора = Настройки.Отбор.Элементы.Добавить(Тип(""ЭлементОтбораКомпоновкиДанных""));
ЭлементОтбора.Использование = Истина;
ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(""<?""Введите имя отбора"">"");
ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
ЭлементОтбора.ПравоеЗначение = <?""Укажите значение отбора"">;
"}
}
}
},
{11,
{"Асинхронные вызовы",1,0,"",""},
{0,
{"Описание оповещения",0,0,"Опис[ание]","ОписаниеОповещения = Новый ОписаниеОповещения(""<?""Имя процедуры"">"", ЭтотОбъект);
<?>"}
},
{0,
{"Описание оповещения (с описанием обработчика)",0,0,"Опис[ание]","ОписаниеОповещения = Новый ОписаниеОповещения(""<?""Имя процедуры"">"", ЭтотОбъект);

//==========Вынести в отдельную процедуру========
//
//Список аргументов зависит от контекста вызова!
//&НаКлиенте
//Процедура <?""Имя процедуры"">(ДополнительныеПараметры) Экспорт
//	
//КонецПроцедуры
 "}
},
{0,
{"Описание оповещения с обработчиком ошибки",0,0,"Опис[ание]","ОписаниеОповещения = Новый ОписаниеОповещения(""<?""Имя процедуры"">"", ЭтотОбъект, ,""<?""Имя процедуры"">ОбработкаОшибки"", ЭтотОбъект);
<?>"}
},
{0,
{"Описание оповещения с обработчиком ошибки (с описанем обработчика)",0,0,"Опис[ание]","ОписаниеОповещения = Новый ОписаниеОповещения(""<?""Имя процедуры"">"", ЭтотОбъект, ,""<?""Имя процедуры"">ОбработкаОшибки"", ЭтотОбъект);

//==========Вынести в отдельную процедуру========
//
//Список аргументов зависит от контекста вызова!
//&НаКлиенте
//Процедура <?""Имя процедуры"">(ДополнительныеПараметры) Экспорт
//	
//КонецПроцедуры

//&НаКлиенте
//Процедура <?""Имя процедуры"">ОбработкаОшибки(ДополнительныеПараметры) Экспорт
//	
//КонецПроцедуры
 "}
},
{2,
{"Помещение файла во временное хранилище",1,0,"",""},
{0,
{"Поместить файл",0,1,"","&НаКлиенте
Процедура ПоместитьФайлКоманда(Команда)
    ПараметрыДиалога = Новый ПараметрыДиалогаПомещенияФайлов;
    ПараметрыДиалога.Заголовок = ""НачатьПомещениеФайлаНаСервер"";
    ПараметрыДиалога.МножественныйВыбор = Истина;
    ПараметрыДиалога.Фильтр = ""Все файлы|*.*"";
	//НСтр(""en = 'Excel (*.XLS, *.xlsx)|*.XLS;*.xlsx|'; ru = 'Файл таблицы Excel (*.XLS, *.xlsx)|*.XLS;*.xlsx|'"");
	//НСтр(""en = 'Text (*.txt)|*.txt|'; ru = 'текстовый файл (*.txt)|*.txt|'"");
    ЗавершениеОбратныйВызов = Новый ОписаниеОповещения(""ЗавершениеОбратныйВызов"", ЭтотОбъект);
    ПрогрессОбратныйВызов = Новый ОписаниеОповещения(""ПрогрессОбратныйВызов"", ЭтотОбъект);
    ПередНачалоОбратныйВызов = Новый ОписаниеОповещения(""ПередНачалоОбратныйВызов"", ЭтотОбъект);
    НачатьПомещениеФайлаНаСервер(ЗавершениеОбратныйВызов, ПрогрессОбратныйВызов, ПередНачалоОбратныйВызов, , ПараметрыДиалога);
КонецПроцедуры
&НаКлиенте
Процедура ЗавершениеОбратныйВызов(ОписаниеПомещенногоФайла, ДополнительныеПараметры) Экспорт
    Сообщить(""Помещение файла "" + ?(ОписаниеПомещенногоФайла.ПомещениеФайлаОтменено, ""отменено"", ""выполнено успешно""));
    Сообщить(""Адрес во временном хранилище: "" + ОписаниеПомещенногоФайла.Адрес);
    Сообщить(""Имя файла: "" + ОписаниеПомещенногоФайла.СсылкаНаФайл.Имя);
    Сообщить(""Размер файла, байт: "" + ОписаниеПомещенногоФайла.СсылкаНаФайл.Размер());
КонецПроцедуры
&НаКлиенте
Процедура ПрогрессОбратныйВызов(ПомещаемыйФайл, Помещено, ОтказОтПомещенияФайла, ДополнительныеПараметры) Экспорт
    Состояние(""Файл "" + ПомещаемыйФайл.Имя, Помещено, ""Файл имеет размер "" + ПомещаемыйФайл.Размер() + "" байт"", БиблиотекаКартинок.Документ);
КонецПроцедуры
&НаКлиенте
Процедура ПередНачалоОбратныйВызов(ПомещаемыйФайл, ОтказОтПомещенияФайла, ДополнительныеПараметры) Экспорт
    Сообщить(""Помещаемый файл - "" + ПомещаемыйФайл.Имя + "", размер = "" + ПомещаемыйФайл.Размер());
КонецПроцедуры"}
},
{0,
{"Поместить файл АСИНХ",0,1,"","&НаКлиенте
АСИНХ Процедура ПоместитьФайлКоманда(Команда)
    ПараметрыДиалога = Новый ПараметрыДиалогаПомещенияФайлов;
    ПараметрыДиалога.Заголовок = ""НачатьПомещениеФайлаНаСервер"";
    ПараметрыДиалога.МножественныйВыбор = Истина;
    ПараметрыДиалога.Фильтр = ""Все файлы|*.*"";
	//НСтр(""en = 'Excel (*.XLS, *.xlsx)|*.XLS;*.xlsx|'; ru = 'Файл таблицы Excel (*.XLS, *.xlsx)|*.XLS;*.xlsx|'"");
	//НСтр(""en = 'Text (*.txt)|*.txt|'; ru = 'текстовый файл (*.txt)|*.txt|'"");
    ПрогрессОбратныйВызов = Новый ОписаниеОповещения(""ПрогрессОбратныйВызов"", ЭтотОбъект);
    ПередНачалоОбратныйВызов = Новый ОписаниеОповещения(""ПередНачалоОбратныйВызов"", ЭтотОбъект);
    ОписаниеПомещенногоФайла = ЖДАТЬ НачатьПомещениеФайлаНаСервер(ПрогрессОбратныйВызов, ПередНачалоОбратныйВызов, , ПараметрыДиалога);
	Если ОписаниеПомещенногоФайла = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	Сообщить(""Помещение файла "" + ?(ОписаниеПомещенногоФайла.ПомещениеФайлаОтменено, ""отменено"", ""выполнено успешно""));
    Сообщить(""Адрес во временном хранилище: "" + ОписаниеПомещенногоФайла.Адрес);
    Сообщить(""Имя файла: "" + ОписаниеПомещенногоФайла.СсылкаНаФайл.Имя);
    Сообщить(""Размер файла, байт: "" + ОписаниеПомещенногоФайла.СсылкаНаФайл.Размер());

КонецПроцедуры

&НаКлиенте
Процедура ПрогрессОбратныйВызов(ПомещаемыйФайл, Помещено, ОтказОтПомещенияФайла, ДополнительныеПараметры) Экспорт
    Состояние(""Файл "" + ПомещаемыйФайл.Имя, Помещено, ""Файл имеет размер "" + ПомещаемыйФайл.Размер() + "" байт"", БиблиотекаКартинок.Документ);
КонецПроцедуры
&НаКлиенте
Процедура ПередНачалоОбратныйВызов(ПомещаемыйФайл, ОтказОтПомещенияФайла, ДополнительныеПараметры) Экспорт
    Сообщить(""Помещаемый файл - "" + ПомещаемыйФайл.Имя + "", размер = "" + ПомещаемыйФайл.Размер());
КонецПроцедуры"}
}
},
{7,
{"Процедура",1,0,"",""},
{0,
{"Асинх Процедура",0,0,"Проц[едура]","Асинх Процедура <?>()
		
КонецПроцедуры
"}
},
{0,
{"Асинх Процедура с заголовком",0,0,"Процедура","////////////////////////////////////////////////////////////////////////////////
//
// Процедура <?""Введите имя процедуры"">
//
// Описание:
//
//
// Параметры (название, тип, дифференцированное значение)
//
Асинх Процедура <?""Введите имя процедуры"">()
    <?>
КонецПроцедуры //<?""Введите имя процедуры"">

"}
},
{0,
{"Асинх Процедура НаКлиенте",0,0,"Проц[едура]","&НаКлиенте
Асинх Процедура <?>()
	
КонецПроцедуры
"}
},
{0,
{"Асинх Процедура НаСервереБезКонтекста",0,0,"Проц[едура]","&НаСервереБезКонтекста
Асинх Процедура <?>()

КонецПроцедуры"}
},
{0,
{"Асинх Процедура НаСервере",0,0,"Проц[едура]","&НаСервере
Асинх Процедура <?>()
	
КонецПроцедуры
"}
},
{0,
{"Асинх Процедура НаКлиентеНаСервереБезКонтекста (только модули упр.форм)",0,0,"Проц[едура]","&НаКлиентеНаСервереБезКонтекста
Асинх Процедура <?>()
	
КонецПроцедуры
"}
},
{0,
{"Асинх Процедура НаКлиентеНаСервере (только модули команд)",0,0,"Проц[едура]","&НаКлиентеНаСервере
Асинх Процедура <?>()
	
КонецПроцедуры
"}
}
},
{7,
{"Функция",1,0,"",""},
{0,
{"Асинх Функция",0,0,"Функ[ция]","Асинх Функция <?>()
		
КонецФункции
"}
},
{0,
{"Асинх Функция с заголовком",0,0,"Функция","////////////////////////////////////////////////////////////////////////////////
//
// Функция <?""Введите имя функции"">
//
// Описание:
//
//
// Параметры (название, тип, дифференцированное значение)
//
// Возвращаемое значение: 
//
Асинх Функция <?""Введите имя функции"">()
    <?>
КонецФункции //<?""Введите имя функции"">
"}
},
{0,
{"Асинх Функция НаКлиенте",0,0,"Функ[ция]","&НаКлиенте
Асинх Функция <?>()
	
КонецФункции
"}
},
{0,
{"Асинх Функция НаСервереБезКонтекста",0,0,"Функ[ция]","&НаСервереБезКонтекста
Асинх Функция <?>()
	
КонецФункции
"}
},
{0,
{"Асинх Функция НаСервере",0,0,"Функ[ция]","&НаСервере
Асинх Функция <?>()
	
КонецФункции
"}
},
{0,
{"Асинх Функция НаКлиентеНаСервереБезКонтекста (только модули упр.форм)",0,0,"Функ[ция]","&НаКлиентеНаСервереБезКонтекста
Асинх Функция <?>()
	
КонецФункции"}
},
{0,
{"Асинх Функция НаКлиентеНаСервере (только модули команд)",0,0,"Функ[ция]","&НаКлиентеНаСервере
Асинх Функция <?>()
	
КонецФункции"}
}
},
{0,
{"(Асинх) Процедура",0,0,"Асинх[ Процедура]","Асинх Процедура <?>()
	
КонецПроцедуры
	   "}
},
{0,
{"(Асинх) Функция",0,0,"Асинх[ Функция]","Асинх Функция <?>()
	
КонецПроцедуры
	   "}
},
{0,
{"Обещание",0,0,"Обещание=","Обещание = Ждать <?>;"}
},
{6,
{"Вопрос",1,0,"",""},
{0,
{"Асинх Вопрос",0,0,"Ответ=","Ответ = Ждать ВопросАсинх(""<?""Текст вопроса"">"",<?""Режим диалога вопрос"", ВыборВарианта, ""ДаНет"", ""РежимДиалогаВопрос.ДаНет"", ""ДаНетОтмена"", ""РежимДиалогаВопрос.ДаНетОтмена"", ""ОК"", ""РежимДиалогаВопрос.ОК"", ""ОКОтмена"", ""РежимДиалогаВопрос.ОКОтмена"", ""ПовторитьОтмена"", ""РежимДиалогаВопрос.ПовторитьОтмена"", ""ПрерватьПовторитьПропустить"", ""РежимДиалогаВопрос.ПрерватьПовторитьПропустить"">, 60);
   "}
},
{0,
{"Асинх Вопрос",0,0,"ПоказатьВо[прос]","Ответ = Ждать ВопросАсинх(""<?""Текст вопроса"">"",<?""Режим диалога вопрос"", ВыборВарианта, ""ДаНет"", ""РежимДиалогаВопрос.ДаНет"", ""ДаНетОтмена"", ""РежимДиалогаВопрос.ДаНетОтмена"", ""ОК"", ""РежимДиалогаВопрос.ОК"", ""ОКОтмена"", ""РежимДиалогаВопрос.ОКОтмена"", ""ПовторитьОтмена"", ""РежимДиалогаВопрос.ПовторитьОтмена"", ""ПрерватьПовторитьПропустить"", ""РежимДиалогаВопрос.ПрерватьПовторитьПропустить"">, 60);
"}
},
{0,
{"Асинх Вопрос",0,0,"Воп[рос]","Ответ = Ждать ВопросАсинх(""<?""Текст вопроса"">"",<?""Режим диалога вопрос"", ВыборВарианта, ""ДаНет"", ""РежимДиалогаВопрос.ДаНет"", ""ДаНетОтмена"", ""РежимДиалогаВопрос.ДаНетОтмена"", ""ОК"", ""РежимДиалогаВопрос.ОК"", ""ОКОтмена"", ""РежимДиалогаВопрос.ОКОтмена"", ""ПовторитьОтмена"", ""РежимДиалогаВопрос.ПовторитьОтмена"", ""ПрерватьПовторитьПропустить"", ""РежимДиалогаВопрос.ПрерватьПовторитьПропустить"">, 60);
"}
},
{0,
{"Асинх Вопрос с анализом результата",0,0,"Ответ=","Ответ = Ждать ВопросАсинх(""<?""Текст вопроса"">"",<?""Режим диалога вопрос"", ВыборВарианта, ""ДаНет"", ""РежимДиалогаВопрос.ДаНет"", ""ДаНетОтмена"", ""РежимДиалогаВопрос.ДаНетОтмена"", ""ОК"", ""РежимДиалогаВопрос.ОК"", ""ОКОтмена"", ""РежимДиалогаВопрос.ОКОтмена"", ""ПовторитьОтмена"", ""РежимДиалогаВопрос.ПовторитьОтмена"", ""ПрерватьПовторитьПропустить"", ""РежимДиалогаВопрос.ПрерватьПовторитьПропустить"">, 60);
	
Если Ответ <?"""", ВыборВарианта, ""Равен"", ""="", ""Не равен"", ""<>""> <?""Код возврата диалога"", ВыборВарианта, ""Да"", ""КодВозвратаДиалога.Да"", ""Нет"", ""КодВозвратаДиалога.Нет"", ""ОК"", ""КодВозвратаДиалога.ОК"", ""Отмена"", ""КодВозвратаДиалога.Отмена"", ""Повторить"", ""КодВозвратаДиалога.Повторить"", ""Прервать"", ""КодВозвратаДиалога.Прервать"", ""Пропустить"", ""КодВозвратаДиалога.Пропустить"", ""Тайаут"", ""КодВозвратаДиалога.Таймаут""> Тогда
		
КонецЕсли; 
"}
},
{0,
{"Асинх Вопрос с анализом результата",0,0,"ПоказатьВо[прос]","Ответ = Ждать ВопросАсинх(""<?""Текст вопроса"">"",<?""Режим диалога вопрос"", ВыборВарианта, ""ДаНет"", ""РежимДиалогаВопрос.ДаНет"", ""ДаНетОтмена"", ""РежимДиалогаВопрос.ДаНетОтмена"", ""ОК"", ""РежимДиалогаВопрос.ОК"", ""ОКОтмена"", ""РежимДиалогаВопрос.ОКОтмена"", ""ПовторитьОтмена"", ""РежимДиалогаВопрос.ПовторитьОтмена"", ""ПрерватьПовторитьПропустить"", ""РежимДиалогаВопрос.ПрерватьПовторитьПропустить"">, 60);
	
Если Ответ <?"""", ВыборВарианта, ""Равен"", ""="", ""Не равен"", ""<>""> <?""Код возврата диалога"", ВыборВарианта, ""Да"", ""КодВозвратаДиалога.Да"", ""Нет"", ""КодВозвратаДиалога.Нет"", ""ОК"", ""КодВозвратаДиалога.ОК"", ""Отмена"", ""КодВозвратаДиалога.Отмена"", ""Повторить"", ""КодВозвратаДиалога.Повторить"", ""Прервать"", ""КодВозвратаДиалога.Прервать"", ""Пропустить"", ""КодВозвратаДиалога.Пропустить"", ""Тайаут"", ""КодВозвратаДиалога.Таймаут""> Тогда
		
КонецЕсли; 
"}
},
{0,
{"Асинх Вопрос с анализом результата",0,0,"Воп[рос]","Ответ = Ждать ВопросАсинх(""<?""Текст вопроса"">"",<?""Режим диалога вопрос"", ВыборВарианта, ""ДаНет"", ""РежимДиалогаВопрос.ДаНет"", ""ДаНетОтмена"", ""РежимДиалогаВопрос.ДаНетОтмена"", ""ОК"", ""РежимДиалогаВопрос.ОК"", ""ОКОтмена"", ""РежимДиалогаВопрос.ОКОтмена"", ""ПовторитьОтмена"", ""РежимДиалогаВопрос.ПовторитьОтмена"", ""ПрерватьПовторитьПропустить"", ""РежимДиалогаВопрос.ПрерватьПовторитьПропустить"">, 60);
	
Если Ответ <?"""", ВыборВарианта, ""Равен"", ""="", ""Не равен"", ""<>""> <?""Код возврата диалога"", ВыборВарианта, ""Да"", ""КодВозвратаДиалога.Да"", ""Нет"", ""КодВозвратаДиалога.Нет"", ""ОК"", ""КодВозвратаДиалога.ОК"", ""Отмена"", ""КодВозвратаДиалога.Отмена"", ""Повторить"", ""КодВозвратаДиалога.Повторить"", ""Прервать"", ""КодВозвратаДиалога.Прервать"", ""Пропустить"", ""КодВозвратаДиалога.Пропустить"", ""Тайаут"", ""КодВозвратаДиалога.Таймаут""> Тогда
		
КонецЕсли; 
"}
}
}
},
{4,
{"Расширения",1,0,"",""},
{0,
{"Расширения Удаление",0,0,"Уд[аление]","#Удаление
	<?>
#КонецУдаления"}
},
{0,
{"Расширения Вставка",0,0,"Вст[авка]","#Вставка
	<?>
#КонецВставки"}
},
{4,
{"Процедуры",1,0,"",""},
{0,
{"Расширения &Перед",0,0,"Проц[едура]","&Перед(""<?""Имя процедуры"">"")
Процедура <?""Имя процедуры"">()
	<?>
КонецПроцедуры"}
},
{0,
{"Расширения &После",0,0,"Проц[едура]","&После(""<?""Имя процедуры"">"")
Процедура <?""Имя процедуры"">()
	<?>
КонецПроцедуры"}
},
{0,
{"Расширения &Вместо",0,0,"Проц[едура]","&Вместо(""<?""Имя процедуры"">"")
Процедура <?""Имя процедуры"">()
	<?>
	//ПродолжитьВызов();
КонецПроцедуры"}
},
{0,
{"Расширения &ИзменениеИКонтроль",0,0,"Проц[едура]","&ИзменениеИКонтроль(""<?""Имя процедуры"">"")
Процедура ПРЕФИКС_<?""Имя процедуры"">()
	<?>
КонецПроцедуры"}
}
},
{4,
{"Функции",1,0,"",""},
{0,
{"Расширения &Перед",0,0,"Функ[ция]","&Перед(""<?""Имя функции"">"")
Функция <?""Имя Функции"">()
	<?>
Конецфункции"}
},
{0,
{"Расширения &После",0,0,"Функ[ция]","&После(""<?""Имя функции"">"")
Функция <?""Имя функции"">()
	<?>
Конецфункции"}
},
{0,
{"Расширения &Вместо",0,0,"Функ[ция]","&Вместо(""<?""Имя функции"">"")
Функция <?""Имя функции"">()
	<?>
	//ПродолжитьВызов();
Конецфункции"}
},
{0,
{"Расширения &ИзменениеИКонтроль",0,0,"Проц[едура]","&ИзменениеИКонтроль(""<?""Имя функции"">"")
Функция ПРЕФИКС_<?""Имя функции"">()
	<?>
Конецфункции"}
}
}
},
{1,
{"Полезняшки",1,0,"",""},
{0,
{"Загрузка данных из Excel АСИНХ",0,0,"","&НаКлиенте
АСИНХ Процедура ПоместитьФайлКоманда(Команда)
    ПараметрыДиалога = Новый ПараметрыДиалогаПомещенияФайлов;
    ПараметрыДиалога.Заголовок = ""НачатьПомещениеФайлаНаСервер"";
    ПараметрыДиалога.МножественныйВыбор = Истина;
    ПараметрыДиалога.Фильтр = НСтр(""en = 'Excel (*.XLS, *.xlsx)|*.XLS;*.xlsx|'; ru = 'Файл таблицы Excel (*.XLS, *.xlsx)|*.XLS;*.xlsx|'"");
	ПрогрессОбратныйВызов = Новый ОписаниеОповещения(""ПрогрессОбратныйВызов"", ЭтотОбъект);
    ПередНачалоОбратныйВызов = Новый ОписаниеОповещения(""ПередНачалоОбратныйВызов"", ЭтотОбъект);
	ОписаниеПомещенногоФайла = ЖДАТЬ ПоместитьФайлНаСерверАсинх(ПрогрессОбратныйВызов, ПередНачалоОбратныйВызов, , ПараметрыДиалога);
	Если ОписаниеПомещенногоФайла = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	Сообщить(""Помещение файла "" + ?(ОписаниеПомещенногоФайла.ПомещениеФайлаОтменено, ""отменено"", ""выполнено успешно""));
    Сообщить(""Адрес во временном хранилище: "" + ОписаниеПомещенногоФайла.Адрес);
    Сообщить(""Имя файла: "" + ОписаниеПомещенногоФайла.СсылкаНаФайл.Имя);
    Сообщить(""Размер файла, байт: "" + ОписаниеПомещенногоФайла.СсылкаНаФайл.Размер());

	ОбработатьЗагруженныйФайл(ОписаниеПомещенногоФайла.Адрес);
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОбработатьЗагруженныйФайл(Адрес)
	
	ФайлНаДиске = ПолучитьИмяВременногоФайла(""xlsx""); 
	ДанныеФайла = ПолучитьИзВременногоХранилища(Адрес); 
    ДанныеФайла.Записать(ФайлНаДиске) ; 
		
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.Прочитать(ФайлНаДиске, СпособЧтенияЗначенийТабличногоДокумента.Значение);
	
	ПостроительЗапроса = Новый ПостроительЗапроса;
	ПостроительЗапроса.ИсточникДанных = Новый ОписаниеИсточникаДанных (ТабДок.Область(""Лист1"")); //Здесть Лист1 - название листа экселя.
	ПостроительЗапроса.Выполнить();
	//В файле первой строчкой должны идти названия колонок. Если этого не будет, то построитель не вернет ТЗ, т.к. не будут заданы имена колонок.
	//Также нужно смотреть на типы ячеек файла. Типизация нормально отрабатывает, если заданы соответствующие типы. Иначе ""10.08.2017"" в экселе - это строка, а не дата.
	СтрокиТЗ = ПостроительЗапроса.Результат.Выгрузить(); //Выполняем запрос к источнику данных, автоматически выбирая все поля и получаем таблицу значений

	Для каждого СтрокаТЗ Из СтрокиТЗ Цикл
		//Полученные данные
	КонецЦикла; 
КонецПроцедуры 

&НаКлиенте
Процедура ПрогрессОбратныйВызов(ПомещаемыйФайл, Помещено, ОтказОтПомещенияФайла, ДополнительныеПараметры) Экспорт
    Состояние(""Файл "" + ПомещаемыйФайл.Имя, Помещено, ""Файл имеет размер "" + ПомещаемыйФайл.Размер() + "" байт"", БиблиотекаКартинок.Документ);
КонецПроцедуры

&НаКлиенте
Процедура ПередНачалоОбратныйВызов(ПомещаемыйФайл, ОтказОтПомещенияФайла, ДополнительныеПараметры) Экспорт
    Сообщить(""Помещаемый файл - "" + ПомещаемыйФайл.Имя + "", размер = "" + ПомещаемыйФайл.Размер());
КонецПроцедуры"}
}
}
}
}